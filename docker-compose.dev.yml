version: '3.8'

services:
  macm-api-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: macm-agent-tools-api-dev
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      # Mount source code for hot reload during development
      - ./src:/app/src:ro
    restart: unless-stopped
    command: ["python", "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8080", "--reload"]
    working_dir: /app/src
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/api/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - macm-network
    depends_on:
      - neo4j-dev

  neo4j-dev:
    image: neo4j:5.11.0-enterprise
    container_name: macm-neo4j-dev
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=${NEO4J_USER:-neo4j}/${NEO4J_PASSWORD:-macmpassword}
      - NEO4J_PLUGINS=["apoc", "apoc-extended"]
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_dbms_default__database=${NEO4J_DATABASE:-macm}
    volumes:
      - ./neo4j/config:/conf
      - ./neo4j/triggers-dev:/var/lib/neo4j/db_init/triggers
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "macmpassword", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - macm-network

networks:
  macm-network:
    driver: bridge
    name: macm-network